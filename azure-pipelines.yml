# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

strategy:
  matrix:
    Python35:
      python.version: '3.5'
      imageName: 'ubuntu-16.04'
    Python36:
      python.version: '3.6'
      imageName: 'ubuntu-16.04'
    Python37:
      python.version: '3.7'
      imageName: 'ubuntu-16.04'
    Python38:
      python.version: '3.8'
      imageName: 'ubuntu-16.04'
    Mac_Python27:
      python.version: '2.7'
      imageName: 'macos-10.15'
    Mac_Python37:
      python.version: '3.7'
      imageName: 'macos-10.15'
    Mac_Python38:
      python.version: '3.8'
      imageName: 'macos-10.15'
    Windows_Python27:
      python.version: '2.7'
      imageName: 'vs2017-win2016'
    Windows_Python37:
      python.version: '3.7'
      imageName: 'vs2017-win2016'
    Windows_Python38:
      python.version: '3.8'
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    git config --global user.email user@example.com
    git config --global user.name "Example User"
  displayName: 'Configure git user/email'

- script: |
    python -m pip install --upgrade pip
    pip install -U twine
    curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
    PATH=$HOME/.poetry/bin:$PATH poetry self update
    PATH=$HOME/.poetry/bin:$PATH poetry install
  displayName: 'Install dependencies'

- script: |
    PATH=$HOME/.poetry/bin:$PATH poetry run pytest PyGitUp/tests --cov=PyGitUp --cov-report=html:$(Build.SourcesDirectory)/htmlcov
  displayName: 'Run tests'

- script: |
    PATH=$HOME/.poetry/bin:$PATH poetry build
    twine check dist/*
  displayName: 'Check dist package format'
